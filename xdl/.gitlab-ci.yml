stages:
  - 'lint'
  - 'test'
  - 'deploy'

.test:
  before_script:
    - python -V
    - pip -V
    - python -m venv venv
    - . venv/bin/activate
    - pip install wheel
    - pip install pytest
    - pip install coverage

    # Install xdl requirements
    # Install Chempiler, SerialLabware and ChemputerAPI for simulations

    - pip install git+https://$CHEMPILER_USER:$CHEMPILER_PW@gitlab.com/croningroup/chemputer/chempiler.git@master

    - pip install git+https://$SERIALLABWARE_USER:$SERIALLABWARE_PW@gitlab.com/croningroup/chemputer/seriallabware.git@master

    - pip install git+https://$CHEMPUTERAPI_USER:$CHEMPUTERAPI_PW@gitlab.com/croningroup/chemputer/chemputerapi.git@master

    - pip install git+https://github.com/croningp/commanduino.git@master
    - pip install git+https://$COMMANDUINOLABWARE_USER:$COMMANDUINOLABWARE_PW@gitlab.com/croningroup/chemputer/commanduinolabware.git@master
    - pip install git+https://$CHEMPUTERXDL_USER:$CHEMPUTERXDL_PW@gitlab.com/croningroup/chemputer/chemputerxdl.git@MC/dynamic-step-simulation
    # - git clone https://$CHEMPUTERXDL_USER:$CHEMPUTERXDL_PW@gitlab.com/croningroup/chemputer/chemputerxdl.git && cd chemputerxdl && git checkout MC/muntz-executor-compat && pip install . && cd ..

    # Install xdl
    - pip install .
    - pip freeze

  script:
    - coverage run --source=xdl -m pytest tests -m "unit or integration" -x -rf
    - coverage report -m

test-python:3.6:
  extends: '.test'
  stage: 'test'
  image: 'python:3.6'

test-python:3.7:
  extends: '.test'
  stage: 'test'
  image: 'python:3.7'

test-python:3.8:
  extends: '.test'
  stage: 'test'
  image: 'python:3.8'

lint:
  stage: 'lint'
  image: 'python:3.8'

  variables:
    FLAKE8_EXCLUDE: xdl/steps,xdl/execution/constants.py,xdl/execution/tracking.py,xdl/execution/utils.py,xdl/utils/schema.py,*__init__.py,venv
    FLAKE8_MAX_LINE_LENGTH: 80
    FLAKE8_IGNORE: E302,W503
    FLAKE8_PER_FILE_IGNORE: tests/*:T001

  script:
    - pip install flake8
    - pip install flake8-print
    - flake8 . --per-file-ignores=$FLAKE8_PER_FILE_IGNORE

pages:
  stage: 'deploy'
  image: 'python:3.8'
  script:
    - pip install -r requirements.txt
    - pip install -U sphinx
    - pip install sphinx_rtd_theme
    - cd documentation
    - ./makedocs.sh
    - sphinx-build -b html -c ./ . ../public
  artifacts:
    paths:
      - public
  only:
    - master
